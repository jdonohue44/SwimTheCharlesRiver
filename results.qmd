# Results

## How many days of the year are safe for swimming in the Charles River?

## Is rainfall associated with water quality?

### Water Quality

```{r, message=FALSE, warning=FALSE}
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
library(dplyr)
library(ggplot2)
library(tidyr)

water2024<-read.csv('./data/crbuoy2024.csv')
water2024_summary <- water2024 |> 
  select(date, temp.c, `do..mg.l.`, `est.chl.a..ug.l.`, `est..cyano..cells.ml.`) |>  # Use backticks for special characters
  group_by(date) |> 
  summarize(
    avg_temp = mean((temp.c * 9/5) + 32, na.rm = TRUE),  # Convert Celsius to Fahrenheit and calculate mean
    avg_oxygen = mean(`do..mg.l.`, na.rm = TRUE),  # Use backticks for special characters
    avg_chloro = mean(`est.chl.a..ug.l.`, na.rm = TRUE),
    avg_est_cyano = mean(`est..cyano..cells.ml.`, na.rm = TRUE)
  )

# Reshape data to long format
data_long <- water2024_summary |>
  pivot_longer(cols = starts_with("avg"), names_to = "variable", values_to = "value")

# Convert date column to Date type
data_long$date <- as.Date(data_long$date, format = "%m/%d/%Y")

# Plot with ggplot
ggplot(data_long, aes(x = date, y = value, color = variable)) +
  geom_line() +
  labs(title = "2024 Charles River Water Quality", x = "Date", y = "Value") +
  theme_minimal() +
  scale_x_date(date_labels = "%b %d", date_breaks = "30 day") + 
  scale_y_log10()
```

### Weather

```{r, message=FALSE, warning=FALSE}
if (!require(dplyr)) install.packages("dplyr")
if (!require(ggplot2)) install.packages("ggplot2")
if (!require(tidyr)) install.packages("tidyr")
library(dplyr)
library(ggplot2)
library(tidyr)

weather2024<-read.csv('./data/weather2024daily.csv')
weather2024<-weather2024 |> 
  select(datetime,temp,precip,windspeed,uvindex,moonphase)

# Reshaping data to long format (excluding date)
data_long <- weather2024 |> 
  pivot_longer(
    cols = c(temp, precip, windspeed, uvindex, moonphase),  # Columns to pivot
    names_to = "variable",  # New column for the variable names
    values_to = "value"     # New column for the values
)

# Convert date column to Date type
data_long$datetime <- as.Date(data_long$datetime, format = "%Y-%m-%d")

# Plot with ggplot
ggplot(data_long, aes(x = datetime, y = value, color = variable)) +
  geom_line() +
  labs(title = "2024 Boston Weather", x = "Date", y = "Value") +
  theme_minimal() +
  scale_x_date(date_labels = "%b %d", date_breaks = "30 day") 
```


### Correlated

### Daily

### Hourly
