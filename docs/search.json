[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Swim the Charles River: Analyzing Safe-for-Swim Days in Boston’s Charles River",
    "section": "",
    "text": "1 Introduction\nThe movement to make urban waterways more accessible to swimmers is gaining momentum, with various initiatives underway in Boston and New York: Boston Charles River Swimming Club, Boston Charles River Swim Park Project, Boston City Splash, New York East River Plus Pool, and New York Hudson River Keeper.\nIn support of the revitalization of urban rivers as swimming destinations, this report focuses on the analysis of cyanobacteria levels in Boston’s Charles River. By assessing these levels, we aim to estimate the number of safe swimming days throughout the year. However, cyanobacteria concentration alone cannot fully determine water quality for swimming. A more holistic assessment, including sewage contamination data and further environmental analysis, is essential to ensure public safety.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#harmful-algal-blooms-habs-focus-of-this-analysis",
    "href": "index.html#harmful-algal-blooms-habs-focus-of-this-analysis",
    "title": "Swim the Charles River: Analyzing Safe-for-Swim Days in Boston’s Charles River",
    "section": "2.1 Harmful Algal Blooms (HABs) – focus of this analysis",
    "text": "2.1 Harmful Algal Blooms (HABs) – focus of this analysis\nHarmful Algal Blooms (HABs) occur when an excess of nitrogen and phosphorus in water promotes rapid algae growth. These nutrients often come from industrial and wastewater treatment plants, septic tanks, stormwater runoff, and nutrient-rich rainfall. The most common type of HAB is cyanobacteria, also known as blue-green algae. Cyanobacteria levels are the focus of this analysis.\nIn the Charles River in Boston, key sources of Harmful Algal Blooms (HABs) include:\n\nWastewater treatment plants: Effluent from treatment facilities can introduce excess nitrogen and phosphorus into the river.\nStormwater runoff: Rainwater washes nutrients, such as fertilizers and pollutants, from streets, lawns, and impervious surfaces into the river.\nSewage overflows: Combined sewer overflows (CSOs) during heavy rainfall can discharge untreated sewage, which adds nutrients to the river.\nUrban and industrial runoff: Water from urban areas and industrial sites may contain nutrients that fuel algae growth.\nNutrient-rich rainfall: Increased nitrogen and phosphorus from rainfall can exacerbate nutrient loading in the river.\n\nThese sources contribute to the nutrient imbalances that promote the growth of cyanobacteria and other harmful algal species, leading to potential health risks for humans and aquatic life.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "index.html#sewage-contamination-from-human-fecal-matter-data-not-available",
    "href": "index.html#sewage-contamination-from-human-fecal-matter-data-not-available",
    "title": "Swim the Charles River: Analyzing Safe-for-Swim Days in Boston’s Charles River",
    "section": "2.2 Sewage contamination from human fecal matter – data not available",
    "text": "2.2 Sewage contamination from human fecal matter – data not available\nSewage contamination in urban waters occurs when untreated or poorly treated sewage, containing human waste, enters rivers, lakes, and other water bodies. This can lead to health risks for humans and aquatic life due to harmful pathogens like Enterococci and E. coli. Common sources include leaks, combined sewer overflows (CSOs), and improper disposal.\nKey sources of contamination:\n\nCombined sewer overflows (CSOs): Heavy rain causes untreated sewage to be discharged into waterways.\nLeaking pipes: Damaged sewer lines release sewage gradually.\nMisconnections: Improper plumbing sends wastewater to storm drains.\nStormwater runoff: Rainwater carries fecal matter from streets into waterways.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Data Sources",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#data-sources",
    "href": "data.html#data-sources",
    "title": "2  Data",
    "section": "",
    "text": "Water Quality Buoy placed in the Lower Charles River (2015-2024): Every 15 minutes, this self-contained solar powered buoy takes measurements for temperature, dissolved oxygen, pH, specific conductance, turbidity, chlorophyll, and phycocyanin. The sensors on the buoy are located 1 meter below the water’s surface. The data are transmitted in real-time using telemetry for remote access. The data from this buoy is used to assess water quality conditions and to help track cyanobacteria (blue-green algae) blooms.\nVisual Crossing Historical Weather Data API (2024): Visual Crossing is a provider of weather data and enterprise analysis tools to data scientists, business analysts, professionals, and academics. Founded in 2003, this weather data API leads the industry by providing the lowest-cost access to all types of historical weather data, weather forecasts, climate summaries, and historical weather forecasts.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-data-analysis",
    "href": "data.html#missing-data-analysis",
    "title": "2  Data",
    "section": "2.2 Missing Data Analysis",
    "text": "2.2 Missing Data Analysis\n\nNo data on Sewage Contamination from Human Fecal Matter (e.g. Enterococci samples).\nCovid years are missing water buoy data (2020-2021).\nIn order to stay within free-tier usage, only historical weather data from the following time ranges were downloaded from Visual Crossing:\n\n2024 (daily)\nAugust, 2024 (hourly)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 How many days of the year are cyanobacteria levels safe for swimming in the Charles River?\nIn 2024, there were 51 safe-for-swim days (34%) between May and October based on cyanobacteria levels.\nCode\nwater2024_summary &lt;- water2024_summary |&gt;\n  mutate(swim_status = if_else(avg_est_cyano &lt; 20000,\n                              \"Safe to Swim\", \n                              \"Not Safe to Swim\"),\n         swim_status = factor(swim_status))\n\nsafe_days &lt;- sum(water2024_summary$swim_status == \"Safe to Swim\", na.rm = TRUE)\ntotal_days &lt;- nrow(water2024_summary)\npercent_safe &lt;- round((safe_days/total_days) * 100)\n\nggplot(water2024_summary, aes(x = date)) +\n  # Create blocks of color for the background\n  geom_tile(aes(y = 1, fill = swim_status, height = 2)) +\n  # Add simple points to mark each day\n  geom_point(aes(y = 1), color = \"white\", size = 1) +\n  # Colors that are colorblind-friendly\n  scale_fill_manual(values = c(\"Safe to Swim\" = \"#2ECC71\", \n                              \"Not Safe to Swim\" = \"#E74C3C\")) +\n  labs(title = \"Charles River Swimming Safety\",\n       subtitle = paste0(safe_days, \" safe swimming days (\", percent_safe, \"% of season)\"),\n       x = \"Date\") +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.title = element_blank(),\n    legend.position = \"bottom\",\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  scale_x_date(date_labels = \"%B\", date_breaks = \"1 month\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#how-many-days-of-the-year-are-cyanobacteria-levels-safe-for-swimming-in-the-charles-river",
    "href": "results.html#how-many-days-of-the-year-are-cyanobacteria-levels-safe-for-swimming-in-the-charles-river",
    "title": "3  Results",
    "section": "",
    "text": "3.1.1 Estimated Cyanobacteria Levels\nCyanobacteria levels increased throughout the course of the summer, suggesting that it is safer to swim in the earlier months of the season, like May and June.\n\n\nCode\nggplot(water2024_summary, aes(x = date, y = avg_est_cyano)) +\n  geom_rect(aes(xmin = min(date), xmax = max(date), \n                ymin = 0, ymax = 20000), \n            fill = \"lightgreen\", alpha = 0.05) +\n  geom_rect(aes(xmin = min(date), xmax = max(date), \n                ymin = 20000, ymax = 70000), \n            fill = \"yellow\", alpha = 0.05) +\n  geom_rect(aes(xmin = min(date), xmax = max(date), \n                ymin = 70000, ymax = Inf), \n            fill = \"pink\", alpha = 0.05) +\n  geom_line() +\n  geom_point() +\n  geom_hline(yintercept = 20000, linetype = \"dashed\", color = \"yellow\") +\n  geom_hline(yintercept = 70000, linetype = \"dashed\", color = \"pink\") +\n  annotate(\"text\", x = min(water2024_summary$date), y = 7000, \n           label = \"Low Risk\", hjust = 0) +\n  annotate(\"text\", x = min(water2024_summary$date), y = 25000, \n           label = \"Medium Risk\", hjust = 0) +\n  annotate(\"text\", x = min(water2024_summary$date), y = 75000, \n           label = \"High Risk\", hjust = 0) +\n  scale_y_continuous(\n    labels = scales::comma, \n    breaks = seq(0, max(water2024_summary$avg_est_cyano), by = 10000)\n    ) +\n  labs(title = \"2024 Charles River Cyanobacteria Levels\", \n       x = \"Date\", \n       y = \"Cyanobacteria Cells/mL\") +\n  theme_bw() +\n  scale_x_date(date_labels = \"%b %d\", date_breaks = \"15 day\")\n\n\n\n\n\n\n\n\n\n\n\n3.1.2 Water Temperature\nAnother simple factor affecting a swimmer’s decision to enter urban waters is the water temperature. Good news! For all of June, July, and August the surface water temperature was above 70 degrees Fahrenheit. For swimming in May or September, a 2-3mm wetsuit is recommended. In October, a 4-5mm wetsuit is recommended.\n\n\nCode\nggplot(water2024_summary, aes(x = date, y = avg_temp)) +\n  geom_rect(aes(xmin = min(date), xmax = max(date), \n                ymin = 60, ymax = 70), \n            fill = \"lightblue\", alpha = 0.01) +\n  geom_rect(aes(xmin = min(date), xmax = max(date), \n                ymin = 50, ymax = 60), \n            fill = \"blue\", alpha = 0.01) +\n  geom_line() +\n  geom_point() +\n  geom_hline(yintercept = 60, linetype = \"dashed\", color = \"blue\") +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"lightblue\") +\n  annotate(\"text\", x = min(water2024_summary$date), y = 61, \n           label = \"2-3mm wetsuit recommended\", hjust = 0) +\n  annotate(\"text\", x = min(water2024_summary$date), y = 51, \n           label = \"4-5mm wetsuit recommended\", hjust = 0) +\n  scale_y_continuous(breaks = seq(0, max(water2024_summary$avg_temp), by = 5)) +\n  labs(title = \"2024 Charles River Water Temperature\", \n       x = \"Date\", \n       y = \"Temperature (F)\") +\n  theme_bw() +\n  scale_x_date(date_labels = \"%b %d\", date_breaks = \"15 day\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#is-rainfall-associated-with-water-quality",
    "href": "results.html#is-rainfall-associated-with-water-quality",
    "title": "3  Results",
    "section": "3.2 Is rainfall associated with water quality?",
    "text": "3.2 Is rainfall associated with water quality?\n\n\nCode\nlibrary(ggplot2)\nlibrary(scales)\n\nweather_and_water_2024&lt;-merge(water2024_summary, weather2024, by = 'date')\n\nggplot(weather_and_water_2024, aes(x = date)) +\n  geom_col(aes(y = precip, color = \"Precipitation\")) +\n  geom_line(aes(y = avg_est_cyano / 75000, color = \"Avg Est Cyano\")) +\n  scale_y_continuous(\n    name = \"Precipitation (inches)\",\n    limits = c(0, 2),\n    breaks = seq(0, 2, 0.5),\n    sec.axis = sec_axis(~.*75000, name = \"Avg Est Cyano\", \n                        breaks = seq(0, 150000, 30000))\n  ) +\n  scale_color_manual(values = c(\"Precipitation\" = \"blue\", \"Avg Est Cyano\" = \"red\")) +\n  labs(title = \"Precipitation and Avg Est Cyano over Time\",\n       x = \"Date\",\n       color = \"Variable\") +\n  theme_minimal() +\n  theme(axis.title.y.right = element_text(color = \"red\"),\n        axis.title.y.left = element_text(color = \"blue\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\ncor(weather_and_water_2024$precip, weather_and_water_2024$avg_est_cyano, method = \"pearson\", use = \"complete.obs\")\n\n\n[1] -0.134533\n\n\nCode\nplot(weather_and_water_2024$precip, weather_and_water_2024$avg_est_cyano,\n     main = \"Correlation between Precipitation and Avg Est. Cyanobacteria\",\n     xlab = \"Precipitation (inches)\", ylab = \"Avg Estimated Cyanobacteria\",\n     pch = 19)\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Lag precipitation by 1, 2, and 3 days\nweather_and_water_2024$lag_1_precip &lt;- lag(weather_and_water_2024$precip, n = 1)\nweather_and_water_2024$lag_2_precip &lt;- lag(weather_and_water_2024$precip, n = 2)\nweather_and_water_2024$lag_3_precip &lt;- lag(weather_and_water_2024$precip, n = 3)\n\n# Calculate Spearman correlations for different lags\ncor_1_spearman &lt;- cor(weather_and_water_2024$lag_1_precip, weather_and_water_2024$avg_est_cyano, method = \"spearman\", use = \"complete.obs\")\ncor_2_spearman &lt;- cor(weather_and_water_2024$lag_2_precip, weather_and_water_2024$avg_est_cyano, method = \"spearman\", use = \"complete.obs\")\ncor_3_spearman &lt;- cor(weather_and_water_2024$lag_3_precip, weather_and_water_2024$avg_est_cyano, method = \"spearman\", use = \"complete.obs\")\n\n# Print Spearman correlations for each lag\nprint(paste(\"Spearman correlation with 1-day lag:\", cor_1_spearman))\n\n\n[1] \"Spearman correlation with 1-day lag: -0.267651987896896\"\n\n\nCode\nprint(paste(\"Spearman correlation with 2-day lag:\", cor_2_spearman))\n\n\n[1] \"Spearman correlation with 2-day lag: -0.240569202230453\"\n\n\nCode\nprint(paste(\"Spearman correlation with 3-day lag:\", cor_3_spearman))\n\n\n[1] \"Spearman correlation with 3-day lag: -0.222522482101012\"\n\n\n\n\nCode\n# Create a vector for lag values\nlags &lt;- c(1, 2, 3)\n\n# Store the Spearman correlation results for each lag\nspearman_correlations &lt;- c(cor_1_spearman, cor_2_spearman, cor_3_spearman)\n\n# Plot the Spearman correlation against lag time\nplot(lags, spearman_correlations, type = \"o\", \n     main = \"Spearman Lagged Correlation between Precipitation and Avg Est. Cyanobacteria\",\n     xlab = \"Lag (days)\", ylab = \"Spearman Correlation\",\n     pch = 19, col = \"blue\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "4  Conclusion",
    "section": "",
    "text": "4.1 Future Work",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#future-work",
    "href": "conclusion.html#future-work",
    "title": "4  Conclusion",
    "section": "",
    "text": "Collect data on fecal matter presence in the Charles River, either through sensors or manually collected samples. Certain microorganisms found in fecal matter (e.g. enterococci) are an EPA-approved fecal contamination indicator useful for detecting the presence of disease-causing bacteria, viruses, and protozoa. These pathogens can sicken swimmers and others who use rivers and streams for recreation or eat raw shellfish or fish. Other potential health effects can include diseases of the skin, eyes, ears and respiratory tract. Eating fish or shellfish harvested from waters with fecal contamination can also result in human illness.\nConduct a qualitative research survey on swimmers living in Boston to learn: 1/what urban swimmers think of their local urban river water quality, and 2/top deterrents for swimming in local urban waters more often.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#further-reading",
    "href": "conclusion.html#further-reading",
    "title": "4  Conclusion",
    "section": "4.2 Further Reading",
    "text": "4.2 Further Reading\n\nSensor-based detection of algal blooms for public health advisories and long-term monitoring\nCharles River Conservancy Swim Park Project / Urban River Swimming: Six American Initiatives\nEPA Charles River Buoy Information\nRiver Keeper Testing Methodology\nHudson River Estuary Data.\nSave The Boston Harbor Report Card\nCharles River Watershed Association Water Quality Data\nCDC Harmful Algal Blooms",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]